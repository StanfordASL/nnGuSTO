fixing plots
using PyPlot
train_input = train_input_collected[row, :]
train_output = train_output_collected[row, :]
x_init_recov, x_final_recov, X_soln_recov, U_soln_recov = getComponentsFromData(train_input, train_output)

cf = all_coeffs[row,:]
cf_x = cf[1:num_coeffs]
cf_y = cf[(num_coeffs+1):(2*num_coeffs)]
x_poly = polyval(Poly(cf_x), t_array)
y_poly = polyval(Poly(cf_y), t_array)
xy_poly = vcat([x_poly', y_poly']...)
plot_env_and_trajs_pyplot(model, [X_soln_recov, xy_poly],["Exact solution","Degree 4 Polynomial"])
xlabel!("x")
# ylabel!("y")
annotate!([(-1,5,Plots.text("y",16))])
plot!(legendfontsize = 16, fg_legend=:transparent, tickfontsize = 16, guidefontsize = 16, legend=:topright,yrotation = 0)
plot!(gridalpha = 0.2)
scatter!((x_init_recov[1],x_init_recov[2]), marker=10, lab="")
scatter!((x_final_recov[1],x_final_recov[2]), marker=10, lab="")
annotate!([(x_init_recov[1],x_init_recov[2]+0.8,Plots.text("\$x_{init}\$", 18, :black, :center))])
annotate!([(x_final_recov[1],x_final_recov[2]-0.8,Plots.text("\$x_{final}\$", 18, :black, :center))])